#!/bin/bash

update () {
  rm -rf "$HOME/.$1"
  ln -s "$PWD/$1" "$HOME/.$1"
}

mk-dir-if-not-found () {
  [[ ! -d "$1" ]] &&
    mkdir -p "$1"
}

update xinitrc
update zshrc
update inputrc
update gvimrc
update vimrc
update tmux.conf
update gitignore
update gitconfig
update R
update Rprofile
update emacs
update dircolors
update devilspie

rm -rf "$HOME/scripts"
ln -s "$PWD/scripts" "$HOME/scripts"

rm -rf "$HOME/.config/roxterm.sourceforge.net"
ln -s "$PWD/roxterm" "$HOME/.config/roxterm.sourceforge.net"

mk-dir-if-not-found "$HOME"/.cache/zsh

if [[ -f /usr/bin/packer ]]; then
  if [[ -f /usr/bin/powerline ]]; then
    echo 'Powerline found.'
  else
    packer -S python-powerline-git
  fi
else
  echo 'No powerline but also no packer. Install manually.'
fi

# Assuming the submodule is populated
fzf/uninstall
fzf/install
rm "$HOME"/.fzf.{ba,z}sh
git checkout .

mk-dir-if-not-found "$HOME"/.emacs-auto-backups

mk-dir-if-not-found "$HOME"/.fonts
cp "$PWD"/Monaco_Linux.ttf "$HOME"/.fonts

mk-dir-if-not-found "$HOME"/.icons/default
cp "$PWD"/index.theme "$HOME"/.icons/default/index.theme

if [[ "$1" == "--vundle" ]]; then
  rm -rf "$HOME"/.vim
  mkdir -p "$HOME"/.vim/bundle
  git clone 'https://github.com/VundleVim/Vundle.vim' \
      "$HOME"/.vim/bundle/Vundle.vim
  vim +PluginInstall +qall
fi

if [[ "$1" == "--nukemacs" || "$2" == "--nukemacs" ]]; then
  rm -rf "$HOME"/.emacs.d
fi

"$HOME"/scripts/load-cinnamon-settings

exit 0
