#!/bin/bash

RWD="$HOME"/rstat/projects

function print_help {
echo "
Usage:	rproject -name=projectname
Help:	rproject -h

Specifying the -h flag (even with any other options) shall print help and
exit.
"
exit 0
}

function mkscript {
echo -e "#!/bin/sh\n\n\nexit 0" > "$1"/"$2"
}

if [ $# -eq 0 ]
then
  print_help
fi

for option in $*
do
  if [ "$option" == "-h" ]
  then
    print_help
  fi
done

for option in $*
do
  case "$option" in
    -name=*)
      PROJECT=$(echo "$option" | cut -f 2 -d '=')
      ;;
    *)
      ;;
  esac
done

if [ "$PROJECT" == "" ]
then
  echo "No project name provided. Script is exiting."
  print_help
fi

if [ -d "$RWD"/"$PROJECT" ]
then
  echo "
  A project with the given name already exists. Please call the script again with
  an alternative name.
  "
  exit 0
fi

mkdir -vp "$RWD"/"$PROJECT"/data/{downloaded,preprocessed,cleaned}
mkdir -vp "$RWD"/"$PROJECT"/shscripts
mkdir -vp "$RWD"/"$PROJECT"/figs
mkdir -vp "$RWD"/"$PROJECT"/tables
mkdir -vp "$RWD"/"$PROJECT"/workspaces
mkdir -vp "$RWD"/"$PROJECT"/rsrc/{main,lib}

ln -s "$HOME"/scripts/download.sh "$RWD"/"$PROJECT"/shscripts/10_download.sh
mkscript "$RWD"/"$PROJECT"/shscripts 11_preprocess.sh
mkscript "$RWD"/"$PROJECT"/shscripts 12_clean.sh
mkscript "$RWD"/"$PROJECT"/shscripts 20_source.sh
mkscript "$RWD"/"$PROJECT"/shscripts 21_run.sh
mkscript "$RWD"/"$PROJECT"/shscripts 30_draw.sh
mkscript "$RWD"/"$PROJECT"/shscripts 31_tabulate.sh

touch "$RWD"/"$PROJECT"/rsrc/main/{clean.R,source.R,run.R,draw.R,tabulate.R}

exit 0
