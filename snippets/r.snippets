snippet #! "Expand the shebang" b
#!/usr/bin/R

# Filename: `!p snip.rv = fn`
# Created: `date +%c`

${0}
endsnippet

snippet lib "Add a library"
library(${1:library})
${0}
endsnippet

snippet req "Add a library using require()"
require(${1:library})
${0}
endsnippet

snippet if "One liner `small' if" b
if (${1:test} ${2:operator} ${3:boolean}) ${4:code}
${0}
endsnippet

snippet if "The if command" b
if (${1:x} ${2:==} ${3:0L}) {
  ${4:###}
}
${0}
endsnippet

snippet if "If else block" b
if (${1:test} ${2:operator} ${3:boolean}) {
  ${4:###}
} else {
  ${5:###}
}
${0}
endsnippet

snippet for "The `for' loop" b
for (${1:x} in ${2:s}) {
  ${4:###}
}
${0}
endsnippet

snippet while "The `while' loop" b
while (${1:x} ${2:==} ${3:0L}) {
 ${4:###}
}
${0}
endsnippet

snippet < "Gives an assigment statement" b
${1:foo} <- ${2:bar}
${0}
endsnippet

snippet fun "Defines a new function" b
${1:verb}.${2:subject} <- function (${3:args}) {
  ${4:###}
}
${0}
endsnippet

snippet fundoc "Defines a function with a docstring" b
${1:verb}_${2:subject} <- function (${3:args}) {
  # $1_$2:
  #
  # ${4:Description}
  #
  # Args:
  #
  # Returns:
  # $2: ${6:Description}
  #
  ${7:###}
}
${0}
endsnippet

snippet rm "Clear current list of objects" b
rm(list=ls())
endsnippet

snippet apply "apply" w
apply(X=${1:x}, MARGIN=${2:2},
      FUN=function (${3:k}) {
         ${4:###}
       })
${0}
endsnippet

snippet apply "sapply" w
sapply(X=${1:x},
       FUN=${2:fun})
endsnippet
