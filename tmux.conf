# Prefix
set-option -g prefix M-j

# History limit
set-option -g history-limit 500000

# Look and feel
set-option -g status on
set-option -g default-terminal 'tmux-256color'
set-option -g terminal-overrides ',xterm-256color:Tc'
set-option -g focus-events on
set-option -g renumber-windows on
set-option -g base-index 1

set-option -g status-interval 60
set-option -g status-bg colour67
set-option -g status-fg colour231
set-option -g pane-active-border-style fg=colour67
set-option -g message-style bg=colour231,fg=colour67

set-option -g status-left "\
#[fg=colour67, bg=colour231]#{?client_prefix,#[fg=colour208],}‚ñ∂‚ñ∂‚ñ∂‚ñ∂‚ñ∂#{?window_zoomed_flag, üîç,}"
set-option -g status-right "#[fg=colour67, bg=colour231] %b %d '%y | %I:%M %p | #(battery) ‚óÄ‚óÄ‚óÄ‚óÄ‚óÄ"

set-window-option -g window-status-current-format "\
#[fg=colour67, bg=colour231, bold] #I ÓÇ± #W "

set-window-option -g window-status-format "\
#[fg=colour231, bg=colour67] #I ÓÇ± #{b:pane_current_path} "

# Editing mode
set-option -g mode-keys vi
set-option -g status-keys vi

# Pane management
unbind-key -
bind-key - split-window -c "#{pane_current_path}"

unbind-key |
bind-key | split-window -h -c "#{pane_current_path}"

unbind-key '\'
bind-key '\' select-layout even-horizontal

unbind-key '='
bind-key '=' select-layout even-vertical

unbind-key t
bind-key t select-layout tiled

unbind-key d
bind-key d break-pane

unbind-key Left
bind-key -r Left resize-pane -L 2

unbind-key Right
bind-key -r Right resize-pane -R 2

unbind-key Down
bind-key -r Down resize-pane -D 2

unbind-key Up
bind-key -r Up resize-pane -U 2

unbind-key h
bind-key h select-pane -L

unbind-key j
bind-key j select-pane -U

unbind-key k
bind-key k select-pane -D

unbind-key l
bind-key l select-pane -R

unbind-key o
bind-key o select-pane -l

unbind-key x
bind-key x confirm-before -p 'Kill pane #P? (y/n)' kill-pane

unbind-key w
bind-key w swap-pane -U

# Window management

unbind-key n
bind-key n new-window -c "#{pane_current_path}"

unbind-key H
bind-key H previous-window

unbind-key L
bind-key L next-window

unbind-key O
bind-key O last-window

unbind-key ,
bind-key r command-prompt "rename-window '%%'"

unbind-key X
bind-key X confirm-before -p 'Kill windown #W? (y/n)' kill-window

unbind-key R
bind-key R rotate-window -U

# Session management
unbind-key D
bind-key D detach-client

unbind-key W
bind-key W list-windows

# Copy-mode management
unbind-key Tab
bind-key Tab copy-mode
# Determine the appropriate copy command based on the environment
set-option -g @copy_command "$( \
    if grep -qi microsoft /proc/version; then \
        echo 'clip.exe'; \
    elif [ -n "$WAYLAND_DISPLAY" ]; then \
        echo 'wl-copy'; \
    elif [ -n "$DISPLAY" ]; then \
        echo 'xsel -b'; \
    else \
        echo 'cat'; \
    fi \
)"
set-option -s copy-command "#{@copy_command}"
unbind-key -T copy-mode-vi v
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v \
    send-keys -X rectangle-toggle \; \
    send -X begin-selection "#{@copy_command}"
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "#{@copy_command}"
bind-key -T copy-mode-vi MouseDragEnd1Pane \
    send-keys -X copy-pipe-and-cancel "#{@copy_command}"

# Some convenience routines.
unbind-key e
bind-key e command-prompt "split-window -h 'exec %%'"

unbind-key E
bind-key E command-prompt "new-window 'exec %%'"

unbind-key m
bind-key m command-prompt "split-window -h 'exec tldr %% | less'"

unbind-key s
bind-key s command-prompt -p 'save history to filename:' -I '~/tmp/tmux.history' 'capture-pane -S -500000 ; save-buffer %1 ; delete-buffer'

# For SSH sessions, change some things
if-shell -b 'test -n "$SSH_CLIENT" || test -n "$SSH_TTY"' {

    set-option -g prefix M-k
    set-option -g mouse off

    set-option -g status-position top

    set-option -g status-bg colour208
    set-option -g status-fg colour231
    set-option -g pane-active-border-style fg=colour208
    set-option -g message-style bg=colour231,fg=colour208

    set-option -g status-left "\
#[fg=colour208, bg=colour231]#{?client_prefix,#[fg=colour208],}‚ñ∂‚ñ∂‚ñ∂‚ñ∂‚ñ∂#{?window_zoomed_flag, üîç,}"
    set-option -g status-right "#[fg=colour208, bg=colour231] %b %d '%y | %I:%M %p | #(battery) ‚óÄ‚óÄ‚óÄ‚óÄ‚óÄ"

    set-window-option -g window-status-current-format "\
#[fg=colour208, bg=colour231, bold] #I ÓÇ± #W "

    set-window-option -g window-status-format "\
#[fg=colour231, bg=colour208] #I ÓÇ± #{b:pane_current_path} "

}

# If not in an SSH session, set up some more things
if-shell -b 'test -z "$SSH_CLIENT" && test -z "$SSH_TTY"' {

    # Zshrc related configuration
    set-option -g escape-time 1
    set-option -g default-shell "$SHELL"

    # Plugin configuration
    set-option -g @plugin 'tmux-plugins/tpm'

    # Copy paste configuration
    set-option -g mouse on
    set-option -g @plugin 'tmux-plugins/tmux-yank'
    set-option -g @override_copy_command "#{@copy_command}"
    set-option -g @yank_selection 'clipboard'
    set-option -g @yank_selection_mouse 'clipboard'
    set-option -g @yank_action 'copy-pipe'
    set-option -g @yank_with_mouse 'off'

    # Initialize TPM (keep this line at the very bottom of tmux.conf)
    run -b '~/.tmux/plugins/tpm/tpm'

}
